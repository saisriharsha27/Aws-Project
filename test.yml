AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    MemorySize: 128
    Timeout: 15

Resources:

  # S3 Bucket
  S3Bucket:
    Type: AWS::S3::Bucket

  # Functions
  S3TriggeredLambdaHandler:
    Type: AWS::Serverless::Function
    Properties:
      
      Handler: lambda.handler
      Description: Function that is called when a file is stored in S3.
      Runtime: python3.7
      Role: arn:aws:iam::786051835021:role/Recognition-S3-Cloudwatch
      Code:
        ZipFile: |
          from __future__ import print_function

          import boto3
          from decimal import Decimal
          import json
          import urllib
          print('Loading function')

          rekognition = boto3.client('rekognition')
          client = boto3.client('sns')

          def detect_labels(bucket, key):
               response = rekognition.detect_labels(Image={"S3Object": {"Bucket": bucket, "Name": key}})

    
               return response


# --------------- Main handler ------------------

           def lambda_handler(event, context):
               '''Demonstrates S3 trigger that uses
               Rekognition APIs to detect faces, labels and index faces in S3 Object.
               '''
              #print("Received event: " + json.dumps(event, indent=2))
              
              # Get the object from the event
    
               print (event)
               bucket = event['Records'][0]['s3']['bucket']['name']
               key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'])
               try:
        

        # Calls rekognition DetectLabels API to detect labels in S3 object
                   response = detect_labels(bucket, key)
        
                   tosend=""
        
                   for Label in response["Labels"]:
           # print (Label["Name"] + Label["Confidence"])
            
                       print ('{0} - {1}%'.format(Label["Name"], Label["Confidence"]))
                      tosend+= '{0} - {1}% '.format(Label["Name"], Label["Confidence"])
            
        
                   message = client.publish(TargetArn='arn:aws:sns:us-east-1:786051835021:Image-Recognition-sns', Message=tosend ,Subject='Uploaded Image Labels')
     
                   return "hello"
                except Exception as e:
                    print("e")
                    print("Error processing object {} from bucket {}. ".format(key, bucket) +
                          "Make sure your object and bucket exist and your bucket is in the same region as this function.")
                    raise e
      Events:
        S3Bucket:
          Type: S3
          Properties:
            Bucket: !Ref image-rekog-lambdafunction
            Events: 's3:ObjectCreated:*'

  # Permissions
  AllowS3ToCallLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref S3TriggeredLambdaHandler
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt S3Bucket.Arn